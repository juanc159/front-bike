import{g as n,M as l,N as e,O as o,P as c}from"./index-5157f066.js";const i=c(),r=n(),g=l("useCrudSaleStore",{state:()=>({pathExcel:null,loading:!0,formulario:{id:null,inventory_id:null,description:null,thirds:[],total:0,utilities:0,price_vehicle:null,barter:null},typeAction:"list",keyList:0,sales:[],inventories:[],thirds:[],totalData:0,totalPage:0,currentPage:1,lastPage:0}),getters:{},actions:{clearFormulario(){this.formulario={id:null,inventory_id:null,description:null,thirds:[],total:0,utilities:0,price_vehicle:null,barter:null}},async fetchAll(s){this.loading=!0,await e.post("/sale-list",s).then(t=>{this.loading=!1,this.sales=t.data.sales,this.totalData=t.data.totalData,this.totalPage=t.data.totalPage,this.currentPage=t.data.currentPage,this.lastPage=t.data.lastPage}).catch(async t=>{this.loading=!1,console.log(await t)})},async fetchSave(){const s=o();return s.isLoading=!0,await await e.post("/sale-create",this.formulario).then(a=>(s.isLoading=!1,a.data.code===200&&(this.formulario=a.data.data,this.clearFormulario(),i.toast("Éxito",a.data.message,"success")),a.data.code===500&&i.toast("Error",a.data.message,"danger"),console.log(a.data.status),a.data.status===422?(i.toast("Error",a.data.message,"danger"),{error:a.data.errors,status:a.data.status}):{status:a.data.code})).catch(async a=>(s.isLoading=!1,a.response.status===500&&i.toast("Error",a.response.data.message,"danger"),console.log(await a),{status:a.response.state}))},async fetchDelete(s){const t=o();t.isLoading=!0,await e.delete(`/sale-delete/${s}`).then(a=>{t.isLoading=!1,i.toast("Éxito",a.data.message,"success")}).catch(async a=>{t.isLoading=!1,console.log(await a)})},async fetchInfo(s){const t=o();t.isLoading=!0,await e.get(`/sale-info/${s}`).then(async a=>{t.isLoading=!1,this.formulario=await a.data.data}).catch(async a=>{t.isLoading=!1,console.log(await a)})},async fetchDataForm(){const s=o(),t={company_id:r.company.id};s.isLoading=!0,await e.post("/sale-dataForm",t).then(async a=>{s.isLoading=!1,this.inventories=await a.data.inventories,this.thirds=await a.data.thirds}).catch(async a=>{s.isLoading=!1,console.log(await a)})},async excel(s){const t=o();t.isLoading=!0,console.log(s,"params"),await e.post("/sale-excel",s).then(a=>{t.isLoading=!1,this.pathExcel=a.data.path}).catch(async a=>{t.isLoading=!1,console.log(await a)})}}});export{g as u};
